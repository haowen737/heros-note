/*布局解决方案-居中布局 居中布局 1.水平居中 案例-父容器子容器大小未知*/
<div class="parent">
  <div class="child">DEMO</div>
</div>

/*inline-block+text-align */

.child {
    display: inline-block;
}
.parent {
    text-align: center;
}

/*优点：兼容性好 缺点：child内部的元素会继承*/
/*text-align table+margin */
.child {
    display: table;
}
.parent {
    margin: 0 auto;
}

/*absolute+transform */
.parent {
    position: relative;
}
.child {
    position: absolute;
    left: 50% transform: translateX(-50%);
}
/*优点：不会再对子元素造成影响 缺点：transform为css3新增元素，低版本浏览器难以实现 */

/*flex+justify-content */
.parent {
    display: flex;
    justify-content: center;
}
/*或*/
.parent {
    display: flex;
}
.child {
    margin: 0 auto;
}
缺点：flex在低版本浏览器中不支持

/*2.垂直居中 */
/*table-cell+vertical-align*/
.parent {
    display: table-cell;
    vertical-align: middle;
}
/*优点：兼容性好， */

/*absolute+transform */
.parent {
    position: relative;
}
.child {
    position: absolute;
    top: 50%;
    transform: translateY(50%);
}
/*优点：不会干扰其他元素 缺点：兼容性

flex+align-items
</blockquote><blockquote>*/
.parent {
    display: flex;
    align-items: center;
}
/*优点：只需设置.parent */


/*3.居中(水平&垂直)*/
/*inline-block+text-align+table-cell+vertical-align */

.parent {
    text-align: center; //水平居中
    display: table-cell; //垂直居中
    vertical-align: middle; //垂直居中
}

.child {
    display: inline-block; //水平居中
}

absolute+transform .parent {
    position: relative;
}

.child {
    position: absolute;
    left: 50%;
    top: 50%;
    transform：translate(-50%, -50%);
}
/*缺点：transform的兼容性 */


/*flex+justify-content+align-items*/
.parent {
    display: flex;
    justify-content: center;
    align-items: center;
}
/*优点：只需设置.parent 缺点：flex的兼容性 */

思路： 熟练掌握css各种属性， 分解问题 ·实现里面元素宽度跟内容走 ·再实现水平居中
